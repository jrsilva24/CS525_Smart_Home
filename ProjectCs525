library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.all;



entity project is
    port(
	 clock, enable: in std_logic;
   	 l1,l2,l3,l4,volUp,volDown: in std_logic;
	 l5: in std_logic_vector (6 downto 0);
   	 fdoor,rdoor,win,alarm,heater,cooler,emergencyCall: out std_logic;
	 disp: out std_logic_vector (2 downto 0); 
         volume: out std_logic_vector (3 downto 0)
    );
end project;

architecture house_control of project is
signal temp : integer range 0 to 127;
signal dispVal: integer range 0 to 7;
signal volumeVal: integer range 0 to 12;
signal emergencyCounter: integer range 0 to 300;
signal fdoorSig, rdoorSig, winSig, alarmSig, heaterSig, coolerSig : std_logic;
begin
	process (enable, clock)
	begin
		dispVal <= 0;
		temp <= to_integer (unsigned(l5));

		if not(enable = '1') then
			fdoor <= '0';
			rdoor <= '0';
			win <= '0';
			alarm <= '0';
			heater <= '0';
			cooler <= '0';
		else
			fdoor <= l1;
			rdoor <= l2;
			win <= l3;
			alarm <=l4;
		end if;

		
		if l4 = '1' then
			alarm <= '1';
			alarmSig <= '1';
			if emergencyCounter = 300 then
				emergencyCall <= '1';
				emergencyCounter <= 300;
				
			else
				emergencyCounter <= emergencyCounter + 1;
			end if;
		else
			alarm <= '0';
			alarmSig <= '0';
			emergencyCall <= '0';
			emergencyCounter <= 0;
		end if;
					

		if volUp = '1' and volumeVal < 10 then
			volumeVal <= volumeVal + 1;
		end if;

		if volDown = '1' and volumeVal > 0 then
			volumeVal <= volumeVal - 1;
		end if;
		
		
		if temp < 50 then
			heater <= '1';
			heaterSig <= '1';
		else
			heater <= '0';
			heaterSig <= '0';
		end if;

		if temp > 70 then
			cooler <= '1';
			coolerSig <= '1';
		else
			cooler <= '0';
			coolerSig <= '0';
		end if;

		if l1 = '1' then
			dispVal <= dispVal + 1;
		end if;

		--if alarmSig = '1' then
		--	dispVal <= dispVal + 2;
		--end if;

		--if heaterSig = '1' then
		--	dispVal <= dispVal + 4;
		--end if;

	end process;

	volume <= std_logic_vector(to_unsigned(volumeVal, 4));
	disp <= std_logic_vector(to_unsigned(dispVal, 3));

end house_control;