library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.all;

entity project is
    port(
	 clock, enable: in std_logic;
   	 l1,l2,l3,l4: in std_logic;
	 l5: in std_logic_vector (6 downto 0);
   	 fdoor,rdoor,win,alarm,heater,cooler: out std_logic;
	 disp: out std_logic_vector (2 downto 0) 
    );
end project;

architecture house_control of project is
signal temp : integer range 0 to 127;
signal check, fdoorSig, rdoorSig, winSig, alarmSig, heaterSig, coolerSig : std_logic;
begin
	process (enable, clock)
	begin
		check <= '0';
		if not(enable = '1') then
			fdoor <= '0';
			rdoor <= '0';
			win <= '0';
			alarm <= '0';
			heater <= '0';
			cooler <= '0';
		end if;
		
		if l1 = '1' then
			fdoor <= '1';
			fdoorSig <= '1';
		else
			fdoor <= '0';
			fdoorSig <= '0';
		end if;
		
		if l2 = '1' then
			rdoor <= '1';
			rdoorSig <= '1';
		else
			rdoor <= '0';
			rdoorSig <= '1';
		end if;
		
		if l3 = '1' then
			win <= '1';
			winSig <= '1';
		else
			win <= '0';
			winSig <= '0';
		end if;
		
		if l4 = '1' then
			alarm <= '1';
			alarmSig <= '1';
		else
			alarm <= '0';
			alarmSig <= '0';
		end if;
		
		temp <= to_integer(unsigned(l5));
		
		if temp < 50 then
			heater <= '1';
			heaterSig <= '1';
		else
			heater <= '0';
			heaterSig <= '0';
		end if;
		if temp > 70 then
			cooler <= '1';
			coolerSig <= '1';
		else
			cooler <= '0';
			coolerSig <= '0';
		end if;
		
		if check = '0' then
			case (fdoorSig) is
				when '1' =>
					disp <= "001";
					check <= '1';
				when '0' => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;
		if check = '0' then
			case (rdoorSig) is
				when '1' => 
					disp <= "010";
					check <= '1';
				when '0' => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;
		if check = '0' then
			case (winSig) is
				when '1' =>
					disp <= "011";
					check <= '1';
				when '0' => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;	
		if check = '0' then
			case (alarmSig) is
				when '1' =>
					disp <= "100";
					check <= '1';
				when '0' => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;
		if check = '0' then
			case (heaterSig) is
				when ('1') =>
					disp <= "101";
					check <= '1';
				when ('0') => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;
		if check = '0' then
			case (coolerSig) is
				when '1' =>
					disp <= "110";
					check <= '1';
				when '0' => disp <= "000";
				when others => disp <= "111";
			end case;
		end if;
	end process;

	
end house_control;